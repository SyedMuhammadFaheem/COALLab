					Task 1
include Irvine32.inc
.model small
.stack 100h
.data
val1 WORD ?
val2 SBYTE -10
.code
main proc
mov ebx,-128
mov bl,val2
mov eax,ebx
call WriteInt
invoke exitprocess,0
main endp
end main

					Task 2
include Irvine32.inc
.model small
.stack 100h
.data
val3 DWORD -2147483648
.code
main proc
mov eax,val3
call WriteInt
invoke exitprocess,0
main endp
end main



					*Task 3
include Irvine32.inc
.model small
.stack 100h
.data
val1 WORD ?,0,32768
.code
main proc
invoke exitprocess,0
main endp
end main


					Task 4
include Irvine32.inc
.model small
.data
string BYTE ?
color BYTE "Black",0
a WORD 12
b WORD 2
c1 WORD 13
d WORD 8
e WORD 4
.code
main PROC
mov ebx,offset color
mov edx,ebx
call WriteString
call crlf
mov eax,0
mov ax,a
call WriteInt
call crlf
mov ax,b
call WriteInt
call crlf
mov ax,c1
call WriteInt
call crlf
mov ax,d
call WriteInt
invoke exitprocess,0
main ENDP
END main



					Task 5

include Irvine32.inc
.model small
.stack 100h
.data
a BYTE 10h
b BYTE 15h
c1 BYTE 20h
d BYTE 30h
.code
main proc
mov eax,0
mov al,a
add al,b
mov ebx,0
mov bl,a
sub bl,b
sub eax,ebx
add al,c1
add al,d
mov ebx,eax
call DumpRegs
invoke exitprocess,0
main endp
end main


					Task 6
include Irvine32.inc
.model small
.stack 100h
.data
A BYTE 00010000b
B BYTE 00010101b
C1 BYTE 00100000b
D BYTE 00110000b
.code
main proc
mov eax,0
mov al,A
add al,B
mov ebx,0
mov bl,A
sub bl,B
sub al,bl
add al,C1
add al,D
mov ebx,eax
call DumpRegs
invoke exitprocess,0
main endp
end main



					Task 7
include Irvine32.inc
.model small
.stack 100h
.data
imm8 BYTE 20
data1 WORD 8
data2 WORD 15
data3 WORD 20
.code
main proc
mov eax,0
mov al,imm8
add ax,data1
sub ax,data3
add al,imm8
add ax,data2
call DumpRegs
invoke exitprocess,0
main endp
end main
